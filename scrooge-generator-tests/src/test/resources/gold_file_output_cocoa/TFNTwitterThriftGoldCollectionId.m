/**
 * Generated by Scrooge
 *   version: ?
 *   rev: ?
 *   built at: ?
 */
#import <Foundation/Foundation.h>

#import "ApacheThrift/TApplicationException.h"
#import "ApacheThrift/TBase.h"
#import "ApacheThrift/TObjective-C.h"
#import "ApacheThrift/TProcessor.h"
#import "ApacheThrift/TProtocol.h"
#import "ApacheThrift/TProtocolException.h"
#import "ApacheThrift/TProtocolUtil.h"
#import "TFNTwitterThriftGoldCollectionId.h"

@implementation TFNTwitterThriftGoldCollectionId

- (NSString*)description
{
    NSMutableString* ms = [NSMutableString stringWithString:@"TFNTwitterThriftGoldCollectionId( "];
    [ms appendString:@"collectionId:"];
    [ms appendFormat:@"%@ ", _collectionId];
    [ms appendString:@")"];
    return [NSString stringWithString:ms];
}

- (instancetype)initWithCollectionId:(TFNTwitterThriftGoldCollectionId*)collectionId
{
    if (self = [super init]) {
        [self setCollectionId:collectionId];
    }

    return self;
}

- (instancetype)initWithCoder:(NSCoder*)decoder
{
    if (self = [super init]) {
        if ([decoder containsValueForKey:@"1"]) {
            [self setCollectionId:[decoder decodeObjectForKey:@"1"]];
        }
    }
    return self;
}

- (void)encodeWithCoder:(NSCoder*)encoder
{
    if (_collectionIdIsSet) {
        [encoder encodeObject:_collectionId forKey:@"1"];
    }
}

- (void)setCollectionId:(TFNTwitterThriftGoldCollectionId *)collectionId
{
    _collectionId = collectionId;
    _collectionIdIsSet = YES;
}

- (void)read:(id <TProtocol>)inProtocol
{
    NSString* fieldName;
    int fieldType;
    int fieldID;

    [inProtocol readStructBeginReturningName:nil];
    while (true) {
        [inProtocol readFieldBeginReturningName:&fieldName type:&fieldType fieldID:&fieldID];
        if (fieldType == TType_STOP) {
            break;
        }
        switch (fieldID) {
            case 1:
                if (fieldType == TType_STRUCT) {
                    TFNTwitterThriftGoldCollectionId* collectionId_item;
                    collectionId_item = [[TFNTwitterThriftGoldCollectionId alloc] init];
                    [collectionId_item read:inProtocol];
                    [self setCollectionId:collectionId_item];
                } else {
                    NSLog(@"%s: field ID %i has unexpected type %i.  Skipping.", __PRETTY_FUNCTION__, fieldID, fieldType);
                    [TProtocolUtil skipType:fieldType onProtocol:inProtocol];
                }
                break;
        default:
            NSLog(@"%s: unexpected field ID %i with type %i.  Skipping.", __PRETTY_FUNCTION__, fieldID, fieldType);
            [TProtocolUtil skipType:fieldType onProtocol:inProtocol];
            break;
        }
        [inProtocol readFieldEnd];
    }
    [inProtocol readStructEnd];
    [self validate];
}

- (void)write:(id <TProtocol>)outProtocol
{
    [self validate];
    [outProtocol writeStructBeginWithName:@"TFNTwitterThriftGoldCollectionId"];
    if (_collectionIdIsSet) {
        [outProtocol writeFieldBeginWithName:@"collectionId" type:TType_STRUCT fieldID:1];
        TFNTwitterThriftGoldCollectionId* collectionId_item = _collectionId;
        [collectionId_item write: outProtocol];
        [outProtocol writeFieldEnd];
    }
    [outProtocol writeFieldStop];
    [outProtocol writeStructEnd];
}

- (void)validate
{
    if (!_collectionIdIsSet) {
        @throw [TProtocolException exceptionWithName:@"TProtocolException" reason:@"Required field 'collectionId' is not set."];
    }
}

@end
